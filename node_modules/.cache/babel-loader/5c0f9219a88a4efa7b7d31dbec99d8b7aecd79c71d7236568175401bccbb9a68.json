{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";class TimerButton extends React.Component{constructor(props){super(props);this.state={IsTimerRunning:this.props.IsTimerRunning};this.TimerButtonActivate=this.TimerButtonActivate.bind(this);}componentDidMount(){// Send a message to the background script to get the timer state\nbrowser.runtime.sendMessage({command:\"getStateTimer\"},response=>{// Check if response is defined and has the TimerStart property\nconsole.log(response);if(response&&response.TimerStart!==undefined){this.setState({IsTimerRunning:response.TimerStart});console.log(\"Received TimerStart state:\",response.TimerStart);}else{console.error(\"Invalid response or TimerStart undefined\",response);}});// Listener to handle messages from the background script\nthis.listener=message=>{if(message.command===\"done\"){this.setState({IsTimerRunning:false});console.log(\"Timer done, setting IsTimerRunning to false.\");}};// Add listener for runtime messages\nbrowser.runtime.onMessage.addListener(this.listener);}componentWillUnmount(){// Clean up listener when component unmounts\nbrowser.runtime.onMessage.removeListener(this.listener);}TimerButtonActivate(event){const button=event.target;if(this.state.IsTimerRunning){button.classList.remove(\"active\");this.setState({IsTimerRunning:false});this.props.ToggleTimer();}else{button.classList.add(\"active\");this.setState({IsTimerRunning:true});this.props.ToggleTimer();}}render(){return/*#__PURE__*/_jsx(\"div\",{className:\"TimerButton-container\",children:/*#__PURE__*/_jsx(\"button\",{onClick:this.TimerButtonActivate,className:`TimerButton glass ${this.state.IsTimerRunning?'active':''}`,children:this.state.IsTimerRunning?'STOP':'START'})});}}export default TimerButton;","map":{"version":3,"names":["React","jsx","_jsx","TimerButton","Component","constructor","props","state","IsTimerRunning","TimerButtonActivate","bind","componentDidMount","browser","runtime","sendMessage","command","response","console","log","TimerStart","undefined","setState","error","listener","message","onMessage","addListener","componentWillUnmount","removeListener","event","button","target","classList","remove","ToggleTimer","add","render","className","children","onClick"],"sources":["C:/Users/vovas/OneDrive/Документы/GitHub/Firefocus-extension/src/timer/TimerButton.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TimerButton extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      IsTimerRunning: this.props.IsTimerRunning\r\n    };\r\n\r\n    this.TimerButtonActivate = this.TimerButtonActivate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Send a message to the background script to get the timer state\r\n    browser.runtime.sendMessage({ command: \"getStateTimer\" }, (response) => {\r\n      // Check if response is defined and has the TimerStart property\r\n      console.log(response)\r\n      if (response && response.TimerStart !== undefined) {\r\n        this.setState({ IsTimerRunning: response.TimerStart });\r\n        console.log(\"Received TimerStart state:\", response.TimerStart);\r\n      } else {\r\n        console.error(\"Invalid response or TimerStart undefined\", response);\r\n      }\r\n    });\r\n\r\n    // Listener to handle messages from the background script\r\n    this.listener = (message) => {\r\n      if (message.command === \"done\") {\r\n        this.setState({ IsTimerRunning: false });\r\n        console.log(\"Timer done, setting IsTimerRunning to false.\");\r\n      }\r\n    };\r\n\r\n    // Add listener for runtime messages\r\n    browser.runtime.onMessage.addListener(this.listener);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Clean up listener when component unmounts\r\n    browser.runtime.onMessage.removeListener(this.listener);\r\n  }\r\n\r\n  TimerButtonActivate(event) {\r\n    const button = event.target;\r\n\r\n    if (this.state.IsTimerRunning) {\r\n      button.classList.remove(\"active\");\r\n      this.setState({ IsTimerRunning: false });\r\n      this.props.ToggleTimer();\r\n    } else {\r\n      button.classList.add(\"active\");\r\n      this.setState({ IsTimerRunning: true });\r\n      this.props.ToggleTimer();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TimerButton-container\">\r\n        <button\r\n          onClick={this.TimerButtonActivate}\r\n          className={`TimerButton glass ${this.state.IsTimerRunning ? 'active' : ''}`}\r\n        >\r\n          {this.state.IsTimerRunning ? 'STOP' : 'START'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimerButton.propTypes = {\r\n  ToggleTimer: PropTypes.func.isRequired,\r\n  IsTimerRunning: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default TimerButton;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1B,KAAM,CAAAC,WAAW,QAAS,CAAAH,KAAK,CAACI,SAAU,CACxCC,WAAWA,CAACC,KAAK,CAAC,CAChB,KAAK,CAACA,KAAK,CAAC,CACZ,IAAI,CAACC,KAAK,CAAG,CACXC,cAAc,CAAE,IAAI,CAACF,KAAK,CAACE,cAC7B,CAAC,CAED,IAAI,CAACC,mBAAmB,CAAG,IAAI,CAACA,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC,CAChE,CAEAC,iBAAiBA,CAAA,CAAG,CAClB;AACAC,OAAO,CAACC,OAAO,CAACC,WAAW,CAAC,CAAEC,OAAO,CAAE,eAAgB,CAAC,CAAGC,QAAQ,EAAK,CACtE;AACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrB,GAAIA,QAAQ,EAAIA,QAAQ,CAACG,UAAU,GAAKC,SAAS,CAAE,CACjD,IAAI,CAACC,QAAQ,CAAC,CAAEb,cAAc,CAAEQ,QAAQ,CAACG,UAAW,CAAC,CAAC,CACtDF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,QAAQ,CAACG,UAAU,CAAC,CAChE,CAAC,IAAM,CACLF,OAAO,CAACK,KAAK,CAAC,0CAA0C,CAAEN,QAAQ,CAAC,CACrE,CACF,CAAC,CAAC,CAEF;AACA,IAAI,CAACO,QAAQ,CAAIC,OAAO,EAAK,CAC3B,GAAIA,OAAO,CAACT,OAAO,GAAK,MAAM,CAAE,CAC9B,IAAI,CAACM,QAAQ,CAAC,CAAEb,cAAc,CAAE,KAAM,CAAC,CAAC,CACxCS,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC,CAC7D,CACF,CAAC,CAED;AACAN,OAAO,CAACC,OAAO,CAACY,SAAS,CAACC,WAAW,CAAC,IAAI,CAACH,QAAQ,CAAC,CACtD,CAEAI,oBAAoBA,CAAA,CAAG,CACrB;AACAf,OAAO,CAACC,OAAO,CAACY,SAAS,CAACG,cAAc,CAAC,IAAI,CAACL,QAAQ,CAAC,CACzD,CAEAd,mBAAmBA,CAACoB,KAAK,CAAE,CACzB,KAAM,CAAAC,MAAM,CAAGD,KAAK,CAACE,MAAM,CAE3B,GAAI,IAAI,CAACxB,KAAK,CAACC,cAAc,CAAE,CAC7BsB,MAAM,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CACjC,IAAI,CAACZ,QAAQ,CAAC,CAAEb,cAAc,CAAE,KAAM,CAAC,CAAC,CACxC,IAAI,CAACF,KAAK,CAAC4B,WAAW,CAAC,CAAC,CAC1B,CAAC,IAAM,CACLJ,MAAM,CAACE,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC,CAC9B,IAAI,CAACd,QAAQ,CAAC,CAAEb,cAAc,CAAE,IAAK,CAAC,CAAC,CACvC,IAAI,CAACF,KAAK,CAAC4B,WAAW,CAAC,CAAC,CAC1B,CACF,CAEAE,MAAMA,CAAA,CAAG,CACP,mBACElC,IAAA,QAAKmC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cACpCpC,IAAA,WACEqC,OAAO,CAAE,IAAI,CAAC9B,mBAAoB,CAClC4B,SAAS,CAAE,qBAAqB,IAAI,CAAC9B,KAAK,CAACC,cAAc,CAAG,QAAQ,CAAG,EAAE,EAAG,CAAA8B,QAAA,CAE3E,IAAI,CAAC/B,KAAK,CAACC,cAAc,CAAG,MAAM,CAAG,OAAO,CACvC,CAAC,CACN,CAAC,CAEV,CACF,CAOA,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}