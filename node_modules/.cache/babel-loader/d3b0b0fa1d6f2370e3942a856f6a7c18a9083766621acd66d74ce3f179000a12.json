{"ast":null,"code":"import React from\"react\";import PeriodTimer from\"./timer/PeriodTimer\";import Timer from\"./timer/Timer\";import TimerButton from\"./timer/TimerButton\";import TimerStats from\"./timer/TimerStats\";import TaskManager from\"./Task/TaskManager\";import Settings from\"./Settings\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class ContentArea extends React.Component{constructor(props){super(props);this.state={time:1500,shortTime:300,longTime:900,timeLeft:0,IsTimerRunning:false,stateTimer:\"Pomodoro\",NumOfCycle:0};this.ToggleTimer=this.ToggleTimer.bind(this);this.handleChange=this.handleChange.bind(this);this.changeColor=this.changeColor.bind(this);}changeColor(color){let app=document.querySelector(\".App\");switch(color){case\"Pomodoro\":app.classList.remove(\"ShortBreak\");app.classList.remove(\"LongBreak\");break;case\"Short Break\":app.classList.remove(\"Pomodoro\");break;case\"Long Break\":app.classList.remove(\"Pomodoro\");break;}app.classList.add(color);}AllTimeEnc(){let seconds;seconds=this.state.NumOfCycle*this.state.time;// Проверяем, что входные данные являются неотрицательным числом\nif(typeof seconds!=='number'||seconds<0){throw new Error('Invalid input: must be a non-negative number');}// Определяем количество часов, минут и секунд\nconst hours=Math.floor(seconds/3600);const minutes=Math.floor(seconds%3600/60);const secs=seconds%60;// Создаем массив для хранения частей результата\nconst parts=[];// Добавляем часы, если они есть\nif(hours>0){parts.push(`${hours}h`);}// Добавляем минуты, если они есть\nif(minutes>0||hours>0){// Добавляем минуты, если есть часы или сами минуты больше 0\nparts.push(`${minutes}m`);}// Добавляем секунды, если они есть\nif(secs>0||hours===0&&minutes===0){// Добавляем секунды, если нет часов и минут\nparts.push(`${secs}s`);}if(parts.join(' ')===\"0s\"){return\"-\";}// Возвращаем результат, соединенный пробелом\nreturn parts.join(' ');}TimerTimeEnc(time){console.log(time);let timeStr=\"\";let min=parseInt(time/60);let sec=parseInt(time%60);if(min<10&&min!=0){min=\"0\"+min;}else if(min===0){min=\"00\";}if(sec<10&&sec!=0){sec=\"0\"+sec;}else if(sec===0){sec=\"00\";}timeStr=min+\":\"+sec;console.log(timeStr);return timeStr;}componentDidMount(){browser.runtime.sendMessage({command:\"getTime\"},response=>{this.setState({timeLeft:response.timeLeft,IsTimerRunning:response.TimerStart,stateTimer:response.stateTimer,time:response.time,shortTime:response.shortTime,longTime:response.longTime});console.log(this.state);});this.listener=message=>{if(message.command===\"update\"){this.setState({timeLeft:message.timeLeft,IsTimerRunning:message.TimerStart,stateTimer:message.stateTimer,NumOfCycle:message.NumOfCycle});switch(message.stateTimer){case\"Pomodoro\":this.changeColor(\"Pomodoro\");break;case\"Short Break\":this.changeColor(\"ShortBreak\");break;case\"Long Break\":this.changeColor(\"LongBreak\");break;}}else if(message.command===\"done\"){this.setState({NumOfCycle:this.state.NumOfCycle+1});}};browser.runtime.onMessage.addListener(this.listener);}componentWillUnmount(){browser.runtime.onMessage.removeListener(this.listener);}ToggleTimer(){const{IsTimerRunning}=this.state;console.log(IsTimerRunning);const TimerText=document.querySelector(\".Timer\");if(TimerText.innerHTML===this.TimerTimeEnc(this.state.time)&&!IsTimerRunning){browser.runtime.sendMessage({command:\"start\"},()=>{this.setState({IsTimerRunning:true});});}else if(IsTimerRunning){browser.runtime.sendMessage({command:\"stop\"},()=>{this.setState({IsTimerRunning:false});});}else if(!IsTimerRunning){browser.runtime.sendMessage({command:\"resume\"},()=>{this.setState({IsTimerRunning:true});});}}handleChange(event){this.setState({time:event.target.value});}render(){return/*#__PURE__*/_jsx(\"div\",{className:\"ContentArea\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content glass\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-default active\",children:[/*#__PURE__*/_jsx(PeriodTimer,{stateTimer:this.state.stateTimer}),/*#__PURE__*/_jsx(Timer,{time:this.TimerTimeEnc(this.state.timeLeft)===\"00:00\"?this.TimerTimeEnc(this.state.time):this.TimerTimeEnc(this.state.timeLeft)}),/*#__PURE__*/_jsx(TimerButton,{ToggleTimer:this.ToggleTimer,IsTimerRunning:this.state.IsTimerRunning}),/*#__PURE__*/_jsx(TimerStats,{cycle:this.state.NumOfCycle,allTime:this.AllTimeEnc()}),/*#__PURE__*/_jsx(TaskManager,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"content-settings\",children:/*#__PURE__*/_jsx(Settings,{closeSettings:this.CloseSettings})})]})});}}export default ContentArea;","map":{"version":3,"names":["React","PeriodTimer","Timer","TimerButton","TimerStats","TaskManager","Settings","jsx","_jsx","jsxs","_jsxs","ContentArea","Component","constructor","props","state","time","shortTime","longTime","timeLeft","IsTimerRunning","stateTimer","NumOfCycle","ToggleTimer","bind","handleChange","changeColor","color","app","document","querySelector","classList","remove","add","AllTimeEnc","seconds","Error","hours","Math","floor","minutes","secs","parts","push","join","TimerTimeEnc","console","log","timeStr","min","parseInt","sec","componentDidMount","browser","runtime","sendMessage","command","response","setState","TimerStart","listener","message","onMessage","addListener","componentWillUnmount","removeListener","TimerText","innerHTML","event","target","value","render","className","children","cycle","allTime","closeSettings","CloseSettings"],"sources":["C:/Users/vovas/OneDrive/Документы/GitHub/Firefocus-extension/src/ContentArea.js"],"sourcesContent":["import React from \"react\"\r\nimport PeriodTimer from \"./timer/PeriodTimer\"\r\nimport Timer from \"./timer/Timer\"\r\nimport TimerButton from \"./timer/TimerButton\"\r\nimport TimerStats from \"./timer/TimerStats\"\r\nimport TaskManager from \"./Task/TaskManager\"\r\nimport Settings from \"./Settings\"\r\n\r\nclass ContentArea extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: 1500,\r\n            shortTime: 300,\r\n            longTime: 900,\r\n            timeLeft: 0,\r\n            IsTimerRunning: false,\r\n            stateTimer: \"Pomodoro\",\r\n            NumOfCycle: 0,\r\n        };\r\n\r\n        this.ToggleTimer = this.ToggleTimer.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n    }\r\n\r\n    changeColor(color){\r\n      let app = document.querySelector(\".App\")\r\n      switch(color){\r\n        case \"Pomodoro\": app.classList.remove(\"ShortBreak\"); app.classList.remove(\"LongBreak\"); break;\r\n        case \"Short Break\": app.classList.remove(\"Pomodoro\"); break;\r\n        case \"Long Break\": app.classList.remove(\"Pomodoro\"); break;\r\n      }\r\n      app.classList.add(color);\r\n    }\r\n\r\n    AllTimeEnc(){\r\n      let seconds;\r\n\r\n      seconds = this.state.NumOfCycle * this.state.time;\r\n       // Проверяем, что входные данные являются неотрицательным числом\r\n      if (typeof seconds !== 'number' || seconds < 0) {\r\n        throw new Error('Invalid input: must be a non-negative number');\r\n      }\r\n\r\n      // Определяем количество часов, минут и секунд\r\n      const hours = Math.floor(seconds / 3600);\r\n      const minutes = Math.floor((seconds % 3600) / 60);\r\n      const secs = seconds % 60;\r\n\r\n      // Создаем массив для хранения частей результата\r\n      const parts = [];\r\n\r\n      // Добавляем часы, если они есть\r\n      if (hours > 0) {\r\n        parts.push(`${hours}h`);\r\n      }\r\n\r\n      // Добавляем минуты, если они есть\r\n      if (minutes > 0 || hours > 0) { // Добавляем минуты, если есть часы или сами минуты больше 0\r\n        parts.push(`${minutes}m`);\r\n      }\r\n\r\n      // Добавляем секунды, если они есть\r\n      if (secs > 0 || (hours === 0 && minutes === 0)) { // Добавляем секунды, если нет часов и минут\r\n        parts.push(`${secs}s`);\r\n      }\r\n\r\n      if(parts.join(' ') === \"0s\"){\r\n        return \"-\";\r\n      }\r\n\r\n      // Возвращаем результат, соединенный пробелом\r\n      return parts.join(' ');\r\n    }\r\n\r\n    TimerTimeEnc(time){\r\n      console.log(time);\r\n        let timeStr = \"\";\r\n        let min = parseInt(time / 60);\r\n        let sec = parseInt(time % 60);\r\n\r\n        if (min < 10 && min != 0){\r\n            min = \"0\" + min;\r\n        } else if (min === 0){\r\n            min = \"00\";\r\n        }\r\n\r\n        if (sec < 10 && sec != 0){\r\n            sec = \"0\" + sec;\r\n        } else if (sec === 0){\r\n            sec = \"00\";\r\n        }\r\n\r\n        timeStr = min + \":\" + sec;\r\n\r\n        console.log(timeStr);\r\n        return timeStr\r\n    }\r\n\r\n    componentDidMount() {\r\n        browser.runtime.sendMessage({ command: \"getTime\" }, (response) => {\r\n          this.setState({ \r\n            timeLeft: response.timeLeft, \r\n            IsTimerRunning: response.TimerStart, \r\n            stateTimer: response.stateTimer,\r\n            time: response.time,\r\n            shortTime: response.shortTime,\r\n            longTime: response.longTime,\r\n             });\r\n\r\n          console.log(this.state);\r\n        });\r\n  \r\n        this.listener = (message) => {\r\n          if (message.command === \"update\") {\r\n            this.setState({ timeLeft: message.timeLeft, IsTimerRunning: message.TimerStart, stateTimer: message.stateTimer, NumOfCycle: message.NumOfCycle});\r\n            switch(message.stateTimer){\r\n              case \"Pomodoro\": this.changeColor(\"Pomodoro\"); break;\r\n              case \"Short Break\": this.changeColor(\"ShortBreak\"); break;\r\n              case \"Long Break\": this.changeColor(\"LongBreak\"); break;\r\n            }\r\n            \r\n          } else if(message.command === \"done\"){\r\n            this.setState({NumOfCycle: this.state.NumOfCycle + 1});\r\n          }\r\n        };\r\n  \r\n        browser.runtime.onMessage.addListener(this.listener);\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        browser.runtime.onMessage.removeListener(this.listener);\r\n      }\r\n\r\n    \r\n      ToggleTimer() {\r\n        const {IsTimerRunning} = this.state;\r\n        console.log(IsTimerRunning)\r\n        const TimerText = document.querySelector(\".Timer\")\r\n        if (TimerText.innerHTML === this.TimerTimeEnc(this.state.time) && !IsTimerRunning) {\r\n          browser.runtime.sendMessage({ command: \"start\"}, () => {\r\n            this.setState({IsTimerRunning: true });\r\n          });\r\n        } else if (IsTimerRunning) {\r\n          browser.runtime.sendMessage({ command: \"stop\" }, () => {\r\n            this.setState({ IsTimerRunning: false });\r\n          });\r\n        } else if (!IsTimerRunning) {\r\n          browser.runtime.sendMessage({ command: \"resume\"}, () => {\r\n            this.setState({ IsTimerRunning: true });\r\n          });\r\n        }\r\n      }\r\n    \r\n    \r\n      handleChange(event) {\r\n        this.setState({ time: event.target.value });\r\n      }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ContentArea\">\r\n                <div className=\"content glass\">\r\n                  <div className='content-default active'>\r\n                    <PeriodTimer stateTimer={this.state.stateTimer}/>\r\n                    <Timer time={this.TimerTimeEnc(this.state.timeLeft) === \"00:00\" ? this.TimerTimeEnc(this.state.time): this.TimerTimeEnc(this.state.timeLeft)}/>\r\n                    <TimerButton ToggleTimer={this.ToggleTimer} IsTimerRunning={this.state.IsTimerRunning}/>\r\n                    <TimerStats cycle={this.state.NumOfCycle} allTime={this.AllTimeEnc()}/>\r\n                    <TaskManager />\r\n                  </div>\r\n                  <div className='content-settings'>\r\n                    <Settings closeSettings={this.CloseSettings}/>\r\n                  </div>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\n\r\nexport default ContentArea"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}